{
	"info": {
		"_postman_id": "320e0b05-2b05-472c-990f-292369f3d90d",
		"name": "Remita QA Interview",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20857971"
	},
	"item": [
		{
			"name": "LIST USERS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify that user is on page 2\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"});\r",
							"pm.test(\"Verify that the total_pages is 2\", function () {\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"});\r",
							"pm.test(\"Verify that total is 12\", function () {\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users?page=2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log (jsonData)\r",
							"console.log (jsonData.data)\r",
							"console.log (jsonData.id)\r",
							"console.log (jsonData.first_name)\r",
							"console.log (jsonData.email)\r",
							"\r",
							"pm.test(\"Confirm that id is 2\", function () {\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"Confirm that first_name is Janet\", function () {\r",
							"    pm.expect(jsonData.data.first_name).to.include(\"Janet\");\r",
							"});\r",
							"pm.test(\"Confirm that email is janet.weaver@reqres.in\", function () {\r",
							"    pm.expect(jsonData.data.email).to.include(\"janet.weaver@reqres.in\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "LIST <RESOURCE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Confirm that per_page is 6\", function () {\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"});\r",
							"pm.test(\"Confirm that the first id is 1\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Confirm that second name is fuchsia rose\", function () {\r",
							"    pm.expect(jsonData.data[1].name).to.eql(\"fuchsia rose\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/unknown",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE <RESOURCE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log (jsonData)\r",
							"console.log (jsonData.data)\r",
							"console.log (jsonData.id)\r",
							"console.log (jsonData.name)\r",
							"console.log (jsonData.year)\r",
							"\r",
							"pm.test(\"Confirm that id is 2\", function () {\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"Confirm that name is fuchsia rose\", function () {\r",
							"    pm.expect(jsonData.data.name).to.include(\"fuchsia rose\");\r",
							"});\r",
							"pm.test(\"Confirm that year is 2001\", function () {\r",
							"    pm.expect(jsonData.data.year).to.eql(2001);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/unknown/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that name is Lazbat\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Lazbat\");\r",
							"});\r",
							"pm.test(\"Confirm that job is Software Tester\", function () {\r",
							"    pm.expect(jsonData.job).to.eql(\"Software Tester\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Lazbat\",\r\n    \"job\": \"Software Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that name is Lazbat Babayale\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Lazbat Babayale\");\r",
							"});\r",
							"pm.test(\"Confirm that job is Software Tester\", function () {\r",
							"    pm.expect(jsonData.job).to.eql(\"Software Tester\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Lazbat Babayale\",\r\n    \"job\": \"Software Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that name is Lazbat Aderoju Babayale\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Lazbat Aderoju Babayale\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Lazbat Aderoju Babayale\"\r\n    //\"job\": \"Software Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER - SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that id is 4\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"});\r",
							"pm.test(\"Confirm that token is QpwL5tke4Pnpja7X4\", function () {\r",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/register",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER - UNSUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that user  gets error Missing password \", function () {\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"lazbat@mailinator\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/register",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN - SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Confirm that token is QpwL5tke4Pnpja7X4\", function () {\r",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/login",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	]
}